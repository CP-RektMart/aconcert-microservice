name: aconcert

services:
  # Auth Service Database
  auth-postgres:
    image: postgres:latest
    container_name: auth-postgres
    ports:
      - "6431:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    volumes:
      - auth_db_data:/var/lib/postgresql/data
  
  auth-redis:
    image: redis:latest
    container_name: auth-redis
    ports:
      - "6969:6379"

  # Event Service Database
  event-db:
    image: postgres:15-alpine
    container_name: aconcert-event-db
    environment:
      POSTGRES_DB: event-postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - event_db_data:/var/lib/postgresql/data
      - ../services/event/db/migrations:/docker-entrypoint-initdb.d
    networks:
      - aconcert-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d event-postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  event-redis:
    image: redis:latest
    container_name: event-redis
    ports:
      - "6970:6379"


  # MongoDB for Location Service
  location-mongo:
    image: mongo:6.0
    container_name: location-mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: aconcert
    volumes:
      - location_mongo_data:/data/db
    networks:
      - aconcert-network
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  # Redis (for caching/sessions)
  redis:
    image: redis:7-alpine
    container_name: aconcert-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - aconcert-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  auth_db_data:
    driver: local
  event_db_data:
    driver: local
  redis_data:
    driver: local
  location_mongo_data:
    driver: local

networks:
  aconcert-network:
    driver: bridge
